#X-Generator: crowdin.net
bg.constrain=\u5236\u9650
bc.low=\u304b\u3089
bc.high=\u307e\u3067
bg.sd_write2=SD \u306b\u3000\u304b\u304f
bg.sd_write=SD \u30d5\u30e9\u30c3\u30b7\u30e5\u66f8\u304d\u8fbc\u307f
bg.sd_write_number=SD write number
bg.sd_write_number_int=SD write number Int
bg.sd_return=Return
bg.sd_no_return=No return
bg.eeprom_read=EEPROM \u3092\u3088\u3080
bg.eeprom_write=EEPROM \u306b\u304b\u304f
bd.storage=\u30b9\u30c8\u30ec\u30fc\u30b8
bc.device_address=\u30c7\u30d0\u30a4\u30b9\u30a2\u30c9\u30ec\u30b9
bc.register_address=\u30ec\u30b8\u30b9\u30bf\u30fc\u30a2\u30c9\u30ec\u30b9
bc.watchdog_enable=Enable
bc.eeprom_address=\u30a2\u30c9\u30ec\u30b9
bc.eeprom_data=\u30c7\u30fc\u30bf
bc.ln=\u304a\u304f\u3063\u305f
bc.message=\u304a\u304f\u308b

bg.variable_poly=\u3061\u3083\uff5e \u3078\u3093\u3059\u3046
bg.setter_variable_char=\u3061\u3083\uff5e \u3078\u3093\u3059\u3046\u306b\u3000\u3044\u308c\u308b
bg.char=A
bd.chars=Chars Test
bg.not_equal_poly=\uff01\uff1d
bg.equal_poly=\uff1d
bg.glue_poly=\u304a\u3066\u304c\u307f\u306b\u3044\u308c\u308b
bg.serial_read_poly=\u30d1\u30bd\u30b3\u30f3\u304b\u3089\u3059\u3046\u3058\u3092\u3088\u3080
bg.serial_available=\u306e\u3053\u3063\u3066\u3044\u308b\u304b\u305a
bg.loop2=\u30d7\u30ed\u30b0\u30e9\u30e0
bc.setup=\u3055\u3044\u3057\u3087
bc.loop2=\u305a\u3063\u3068
bg.setup=\u3055\u3044\u3057\u3087
bc.par=\u30a4\u30f3\u30d7\u30c3\u30c8
bc.vecsize=size
bc.num=\uff03
bg.variable_fake=fake
bg.fake=fake
bg.variable_vector=\u306f\u3044\u308c\u3064
bc.position=\u3070\u3093
bg.create_variable_vector=\u306f\u3044\u308c\u3064\u3092\u3064\u304f\u308b
bg.setter_variable_vector=\u306f\u3044\u308c\u3064\u306e\u306a\u304b\u307f\u3092\u3064\u304f\u308b

bg.code_head=hea
bg.code_setup=setup
bg.code_loop=loop
bg.serial_read=\u30d1\u30bd\u30b3\u30f3\u304b\u3089\u3072\u3068\u3064\u3088\u307f\u3053\u307f
bd.especial=\u30b9\u30da\u30b7\u30e3\u30eb\u30b3\u30fc\u30c9
bg.equal_digital=\uff1d
bg.not_equal_digital=\uff01\uff1d
bg.repeat=\u304b\u3044\u3059\u3046\u3092\u3078\u3093\u3059\u3046\u306b\u3044\u308c\u3066\u304f\u308a\u304b\u3048\u3057
bc.var=iteration variable name
bg.glue_msg=glue message

# BlockDrawer name
bc.angle=\u304b\u304f\u3069
bc.base=\u3092
bc.condition=\u306a\u3089
bc.else=\u3060\u3081\u306a\u3089
bc.exponent=\u3058\u3087\u3046
bc.from=\u304b\u3089
bc.level=\u30ec\u30d9\u30eb
bc.max=\u307e\u3067\u306e
bc.microseconds=\u3072\u3083\u304f\u307e\u3093\u3076\u3093\u306e1\u3073\u3087\u3046
bc.milliseconds=\u30df\u30ea\u3073\u3087\u3046
# BlockConnector label
bc.pin_number=\u30d4\u30f3#
bc.status=\u3092
bc.test=\u3053\u308c
bc.then=\u306a\u3089
bc.to=\u307e\u3067
bc.value=\u306a\u304b\u307f
bc.variable=\u3078\u3093\u3059\u3046
bc.frequency=\u3057\u3085\u3046\u306f\u3059\u3046
bc.do=\u305a\u3063\u3068

bd.control=\u305b\u3044\u304e\u3087
bd.dfrobot=DFRobot
bd.number=\u3078\u3093\u3059\u3046\u3068\u3066\u3044\u3059\u3046
bd.operators=\u3051\u3044\u3055\u3093\u3059\u308b
bd.pins=\u30d4\u30f3
bd.seeedstudio=Seeed Studio Grove

bd.communication=\u3064\u3046\u3057\u3093

#linksprite
bd.linksprite_LinkerKit=Linker Kit

bd.tinkerkit=TinkerKit
bd.utilities=\u306a\u307f
# BlockGenus initlabel
bg.Tinker_Accmeter=\u304b\u305d\u304f\u3069\u3051\u3044
bg.Tinker_Button=\u30dc\u30bf\u30f3
bg.Tinker_Hall=\u3058\u304d\u30bb\u30f3\u30b5\u30fc
bg.Tinker_I0=I0
bg.Tinker_I1=I1
bg.Tinker_I2=I2
bg.Tinker_I3=I3
bg.Tinker_I4=I4
bg.Tinker_I5=I5
bg.Tinker_LDR=\u3072\u304b\u308a\u30bb\u30f3\u30b5\u30fc
bg.Tinker_LED=LED
bg.Tinker_LED_pwm=LED
bg.Tinker_LinearPotentiometer=\u30b9\u30e9\u30a4\u30c0\u30fc
bg.Tinker_Mosfet=MOSFET
bg.Tinker_Mosfet_pwm=MOSFET
bg.Tinker_O0=O0
bg.Tinker_O1=O1
bg.Tinker_O2=O2
bg.Tinker_O3=O3
bg.Tinker_O4=O4
bg.Tinker_O5=O5
bg.Tinker_Relay=\u30ea\u30ec\u30fc
bg.Tinker_RotaryPotentiometer=\u30dc\u30ea\u30e5\u30fc\u30e0
bg.Tinker_Servo=\u30b5\u30fc\u30dc
bg.Tinker_Thermistor=\u304a\u3093\u3069\u30bb\u30f3\u30b5\u30fc
bg.Tinker_Tilt=\u304b\u305f\u3080\u304d\u30bb\u30f3\u30b5\u30fc
bg.Tinker_Touch=\u30bf\u30c3\u30c1\u30bb\u30f3\u30b5\u30fc
bg.abs=\u305c\u3063\u305f\u3044\u3061
bg.addition=+
bg.and=\u304b\u3064
bg.cos=cos
bg.delay=\u307e\u3064
bg.delay_microseconds=\u30de\u30a4\u30af\u30ed\u3073\u3087\u3046\u307e\u3064
bg.df_360_degree_rotation_motor=360\u3069\u307e\u308f\u308b\u30e2\u30fc\u30bf\u30fc
bg.df_adjustable_infrared_sensor_switch=\u305b\u304d\u304c\u3044\u305b\u3093\u30bb\u30f3\u30b5\u30fc\u30b9\u30a4\u30c3\u30c1
bg.df_analog_ambient_light_sensor=\u30a2\u30ca\u30ed\u30b0\u3072\u304b\u308a\u30bb\u30f3\u30b5\u30fc
bg.df_analog_gas_sensor=\u30a2\u30ca\u30ed\u30b0\u30ac\u30b9\u30bb\u30f3\u30b5\u30fc
bg.df_analog_grayscale_sensor=\u30a2\u30ca\u30ed\u30b0\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u30bb\u30f3\u30b5\u30fc
bg.df_analog_rotation_sensor_v1=\u30a2\u30ca\u30ed\u30b0\u30dc\u30ea\u30e5\u30fc\u30e0 V1
bg.df_analog_rotation_sensor_v2=\u30a2\u30ca\u30ed\u30b0\u30dc\u30ea\u30e5\u30fc\u30e0 V2
bg.df_analog_sound_sensor=\u30a2\u30ca\u30ed\u30b0\u304a\u3068\u30bb\u30f3\u30b5\u30fc
bg.df_capacitive_touch_sensor=\u305b\u3044\u3067\u3093\u3088\u3046\u308a\u3087\u3046\u3057\u304d\u30bf\u30c3\u30c1\u30bb\u30f3\u30b5\u30fc
bg.df_digital_infrared_motion_sensor=\u30c7\u30b8\u30bf\u30eb\u305b\u304d\u304c\u3044\u305b\u3093\u3069\u3046\u305f\u3044\u30bb\u30f3\u30b5\u30fc
bg.df_digital_ir_receiver_module=\u30c7\u30b8\u30bf\u30eb\u305b\u304d\u304c\u3044\u305b\u3093\u3058\u3085\u3053\u3046\u30e2\u30b8\u30e5\u30fc\u30eb
bg.df_digital_push_button=\u30c7\u30b8\u30bf\u30eb\u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3
bg.df_digital_viberation_sensor=\u30c7\u30b8\u30bf\u30eb\u3057\u3093\u3069\u3046\u30bb\u30f3\u30b5\u30fc
bg.df_flame_sensor=\u30a2\u30ca\u30ed\u30b0\u307b\u306e\u3046\u30bb\u30f3\u30b5\u30fc
bg.df_joystick_module_button=\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af\u30e2\u30b8\u30e5\u30fc\u30eb \u30dc\u30bf\u30f3
bg.df_joystick_module_x=\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af\u30e2\u30b8\u30e5\u30fc\u30eb(\u3088\u3053)
bg.df_joystick_module_y=\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af\u30e2\u30b8\u30e5\u30fc\u30eb(\u305f\u3066)
bg.df_led=LED\u30e2\u30b8\u30e5\u30fc\u30eb
bg.df_led_pwm=\u3061\u3087\u3046\u3053\u3046LED
bg.df_line_tracking_sensor=\u30e9\u30a4\u30f3\u30c8\u30ec\u30fc\u30b9\u30bb\u30f3\u30b5\u30fc
bg.df_mma7260_x=\u3055\u3093\u3058\u304f\u304b\u305d\u304fd\u30bb\u30f3\u30b5\u30fcMMA7260\uff08\u3088\u3053\uff09
bg.df_mma7260_y=\u3055\u3093\u3058\u304f\u304b\u305d\u304f\u3069\u30bb\u30f3\u30b5\u30fcMMA7260\uff08\u305f\u3066\uff09
bg.df_mma7260_z=\u3055\u3093\u3058\u304f\u304b\u305d\u304f\u3069\u30bb\u30f3\u30b5\u30fcMMA7260\uff08\u305f\u304b\u3055\uff09
bg.df_piranha_led=\u30d4\u30e9\u30cb\u30a2LED\u30e2\u30b8\u30e5\u30fc\u30eb
bg.df_piranha_led_pwm=\u30d4\u30e9\u30cb\u30a2\u3061\u3087\u3046\u3053\u3046LED
bg.df_pizeo_disk_vibration_sensor=\u3042\u3064\u3067\u3093\u3057\u3093\u3069\u3046\u30bb\u30f3\u30b5\u30fc
bg.df_relay=\u30ea\u30ec\u30fc
bg.df_servo=Servo
bg.df_temperature_sensor=\u304a\u3093\u3069\u30bb\u30f3\u30b5\u30fc
bg.df_buzzer=Buzzer
bg.df_buzzer_tone=Buzzer
bg.df_buzzer_tone_delay=Buzzer

bg.df_digital_tilt_sensor=Digital Tilt Sensor
bg.df_digital_magnetic_sensor=Digital Magnetic Sensor
bg.df_analog_co_sensor=Analog Carbon Monoxide Sensor
bg.df_analog_voltage_divider=Analog Voltage Divider
bg.df_analog_mma7361_x=X-Asix of Accelerometer
bg.df_analog_mma7361_y=Y-Asix of Accelerometer
bg.df_analog_mma7361_z=Z-Asix of Accelerometer
bg.df_analog_gp2y0a21=Sharp GP2Y0A21 Distance Sensor
bg.df_analog_moisture=Soil Moisture Sensor

bg.digital-high=\u3077\u3089\u3059\u306e\u3067\u3093\u304d
bg.digital-low=\u307e\u3044\u306a\u3059\u306e\u3067\u3093\u304d
bg.digital-off=\u30aa\u30d5
bg.digital-on=\u30aa\u30f3
bg.division=\uff0f
bg.equal=\uff1d
bg.false=\u304e(\u307e\u3061\u304c\u3044)
bg.glue_sb=\u3057\u3093\u304e\u3061\u3092\u304a\u3066\u304c\u307f\u306b
bg.glue_sn=\u3057\u3093\u304e\u3061\u3092\u304a\u3066\u304c\u307f\u306b
bg.greater=\uff1e
bg.greater_equal=\u2267
bg.if=\u3082\u3057
bg.ifelse=\u3082\u3057
bg.less=\uff1c
bg.less_equal=\u2266
bg.loop=\u30d7\u30ed\u30b0\u30e9\u30e0
bg.subroutine=\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3
bg.subroutine-ref=\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3
bg.map=\u30de\u30c3\u30d7
bg.map_common=[0, 1024]\u3092[0, 255]\u306b\u3078\u3093\u304b\u3093
bg.max=\u3055\u3044\u3060\u3044\u3061
bg.message=\u30e1\u30c3\u30bb\u30fc\u30b8
bg.millis=\u30df\u30ea\u3073\u3087\u3046
bg.min=\u3055\u3044\u3057\u3087\u3046
bg.modulo=\u308f\u308a\u3056\u3093\u306e\u3042\u307e\u308a
bg.multiplication=x
bg.not=\u3067\u306f\u306a\u3044
bg.not_equal=\u2260
bg.number=1
bg.or=\u307e\u305f\u306f
bg.pin-read-analog=\u30a2\u30ca\u30ed\u30b0\u30d4\u30f3
bg.pin-read-digital=\u30c7\u30b8\u30bf\u30eb\u30d4\u30f3
bg.pin-read-digital-pullup=\u30c7\u30b8\u30bf\u30eb\u30d4\u30f3\u3092\u3077\u3089\u3059\u306b\u3088\u305b\u3066\u304a\u304f
bg.pin-write-analog=\u30a2\u30ca\u30ed\u30b0\u3057\u3085\u3064\u308a\u3087\u304f
bg.pin-write-digital=\u30c7\u30b8\u30bf\u30eb\u30d4\u30f3\u3092\u30bb\u30c3\u30c8
bg.pow=\u3079\u304d\u3058\u3087\u3046
bg.random=\u3089\u3093\u3059\u3046
bg.repeat_times=\u304f\u308a\u304b\u3048\u3057
bg.seeed_joystick=Grove\u30b5\u30e0\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af
bg.seeed_joystick_button=Grove\u30b5\u30e0\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u30dc\u30bf\u30f3
bg.watchdog_15ms=WDTO_15MS
bg.watchdog_30ms=WDTO_30MS
bg.watchdog_60ms=WDTO_60MS
bg.watchdog_120ms=WDTO_120MS
bg.watchdog_250ms=WDTO_250MS
bg.watchdog_500ms=WDTO_500MS
bg.watchdog_1s=WDTO_1S
bg.watchdog_2s=WDTO_2S
bg.watchdog_4s=WDTO_4S
bg.watchdog_8s=WDTO_8S
bg.watchdog_setup=Watchdog
bg.watchdog_reset=Watchdog Reset



#linksprite
bg.ls_10mmLEDModule=10mm Blue/Green/Yellow/Red LED Module
bg.ls_5mmLEDModule=5mm Blue/Green/Yellow/Red LED Module
bg.ls_AccelerometerModule_x=Accelerometer Module (x-Achse)
bg.ls_AccelerometerModule_y=Accelerometer Module (y-Achse)
bg.ls_AccelerometerModule_z=Accelerometer Module (z-Achse)
bg.ls_ButtonModule=Button Module
bg.ls_BuzzerModule=Buzzer Module
bg.ls_HallSensor=Hall Sensor
bg.ls_HighPowerLedModule=High Power Led Module
bg.ls_JoystickSensorModule_x=Joystick Sensor Module (x-Achse)
bg.ls_JoystickSensorModule_y=Joystick Sensor Module (y-Achse)
bg.ls_LDRModule=LDR Module
bg.ls_LEDBar=LED Bar
bg.ls_Linear-SlidePotentiometerModule=Linear/Slide Potentiometer Module
bg.ls_MagneticSwitch=Magnetic Switch
bg.ls_MosfetModule=Mosfet Module
bg.ls_RelayModule=Relay Module
bg.ls_RotaryPotentiometerModule=Rotary Potentiometer Module
bg.ls_RTCModule=RTC Module
bg.ls_SoundSensor=Sound Sensor
bg.ls_ThermalModule=Thermal Module
bg.ls_TiltModule=Tilt Module
bg.ls_TouchSensorModule=TouchSensor Module

bg.serial_println=\u30d1\u30bd\u30b3\u30f3\u306b\u304a\u304f\u3063\u305f
bg.serial_print=\u30d1\u30bd\u30b3\u30f3\u306b\u304a\u304f\u3063\u3066
bg.servo=\u30b5\u30fc\u30dc
bg.setter_variable_digital=\u3057\u3093\u304e\u3061\u3092\u3044\u308c\u308b
bg.setter_variable_number=\u304b\u305a\u3092\u3044\u308c\u308b
bg.sin=sin
bg.sqrt=\u3078\u3044\u307b\u3046\u3053\u3093
bg.subtraction=-
bg.tan=tan
bg.true=\u3057\u3093(\u305f\u3060\u3057\u3044)
bg.ultrasonic=\u3061\u3087\u3046\u304a\u3093\u3071
bg.variable_digital=\u3057\u3093\u304e\u3061\u306e\u306f\u3044\u308b\u3078\u3093\u3059\u3046
bg.variable_number=\u304b\u305a\u306e\u306f\u3044\u308b\u3078\u3093\u3059\u3046
bg.while=\u304f\u308a\u304b\u3048\u3057
bg.wire_isread=I2C\u304b\u3089\u3088\u3081\u305f\uff1f
bg.wire_read=I2C\u304b\u3089\u3088\u307f\u3053\u3080
bg.wire_write=I2C\u306b\u304b\u304d\u3060\u3059
bg.wire_write_one_byte=I2C Write 1
bg.tone=\u30c8\u30fc\u30f3
bg.tone_time=\u30c8\u30fc\u30f3
bg.no_tone=\u3066\u3044\u3057
bg.xcj_motor_backward=motor shield backward
bg.xcj_motor_forward=motor shield forward
bg.xcj_ms_digital_read=Xinchejian \u3057\u3093\u304e\u3061\u3088\u307f\u3053\u307f
bg.xcj_ms_digital_write=Xinchejian \u3057\u3093\u304e\u3061\u304b\u304d\u3060\u3057

bd.logic=\u304f\u3089\u3079\u308b

ardublock.file.suffix=Ardublock Program File(*.abp)
ardublock.ui.new=\u3042\u305f\u3089\u3057\u3044\u306e\u3092\u3064\u304f\u308b
ardublock.ui.save=\u307b\u305e\u3093
ardublock.ui.saveAs=\u306a\u307e\u3048\u3092\u3064\u3051\u3066\u307b\u305e\u3093
ardublock.ui.load=\u307e\u3048\u306b\u3064\u304f\u3063\u305f\u306e\u3092\u3072\u3089\u304f
ardublock.ui.upload=Arduino\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9
ardublock.ui.clone=\u3082\u3046\u3072\u3068\u3064\u3064\u304f\u308b
ardublock.ui.add_comment=\u305b\u3064\u3081\u3044\u3092\u3064\u3051\u308b
ardublock.ui.delete_comment=\u305b\u3064\u3081\u3044\u3092\u3051\u3059
ardublock.ui.organize_blocks=\u305b\u3044\u308a\u305b\u3044\u3068\u3093
ardublock.ui.create_refer=create reference
ardublock.ui.website=Web \u30b5\u30a4\u30c8
ardublock.ui.serialMonitor=\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc
ardublock.ui.saveImage=Save as image...
ardublock.ui.version=20130920 (beta)

ardublock.translator.exception.subroutineNameDuplicated=tow or more subroutines have the same name\\!
ardublock.translator.exception.noLoopFound=loop\u304c\u306a\u3044\u3088
ardublock.translator.exception.multipleLoopFound=loop\u304c\u3044\u3063\u3071\u3044\u3059\u304e
ardublock.translator.exception.socketNull=socket null
ardublock.translator.exception.subroutineNotDeclared=subroutine not declared

message.title.error=\u30a8\u30e9\u30fc
message.title.question=\u3057\u3064\u3082\u3093
message.content.open_unsaved=Ardublock program has changed, do you want to save?
message.content.overwrite=Do you want overwrite existing file?
message.file_not_found=\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u304b\u3051\u3093\u3052\u3093\u304c\u306a\u3044\u3088
message.question.newfile_on_workspace_changed=The program has changed, do you want to create a new Ardublock file?

bc.repeat_times=\u304b\u3044

# Descriptions of all Block

bg.loop2.description=Main program with loop and setup
bg.loop.description=Main Program loop without setup
bg.delay.description=Delay execution for x milliseconds
bg.if.description=Execute the commands if the condition is true
bg.ifelse.description=Execute the first set of commands if the condition is true, otherwise it will do the second set of commands.
bg.while.description=Execute the commands as long as the condition is true
bg.repeat_times.description=Repeat the commands for "times"
bg.repeat.description=Repeat teh commands for "times" with variable assigned the count
bg.subroutine.description=Add a subroutine
bg.subroutine-ref.description=Invoke subroutine
bg.delay_microseconds.description=Delay program for x microseconds
bg.pin-read-analog.description=Read analog value from pin
bg.pin-read-digital.description=Read digital value from pin
bg.pin-read-digital-pullup.description=set digital pin with internal pullup
bg.pin-write-digital.description=write digital to pin
bg.pin-write-analog.description=write analog to pin
bg.addition.description=Sum of two numbers
bg.subtraction.description=Difference of two numbers
bg.multiplication.description=Product of two numbers
bg.division.description=Quotient of two numbers
bg.random.description=Generate a random number less than the number
bg.map_common.description=map value from [0, 1023] to [0, 255]
bg.map.description=Map value from "from" range to "to" range
bg.constrain.description=Constrain a number between two values
bg.greater.description=True if the first number is greater the second number
bg.less.description=True if the first number is less then the second number
bg.equal.description=True if the first number equals to the scond number
bg.equal_digital.description=True if the first number equals to the scond number
bg.greater_equal.description=True if the first number is greater or equal to the second number
bg.less_equal.description=True if the first number is less or equal to the second number
bg.not_equal.description=True if the first number is not equal to the second number
bg.not_equal_digital.description=True if the first number is not equal to the second number
bg.and.description=True if both of the two conditions are true.
bg.or.description=True if one or both of the two conditions are true.
bg.not.description=The opposite of
bg.equal_poly.description=True if first character is equal to the second character
bg.not_equal_poly.description=True if first character is not equal to the second character
bg.millis.description=Time in milliseconds
bg.true.description=Boolean True.
bg.false.description=Boolean False.
bg.variable_number.description=Numerical Variable
bg.variable_digital.description=Digital Variable
bg.setter_variable_number.description=Set numerical variable
bg.setter_variable_digital.description=Set digital variable
bg.variable_vector.description=Array
bg.create_variable_vector.description=Create a array of numbers
bg.setter_variable_vector.description=Set a array number
bg.setter_variable_char.description=create a array of char
bg.variable_poly.description=Digital Var
bg.servo.description=Control a servo
bg.ultrasonic.description=Ultrasonic distance sensor
bg.tone.description=Generates a square wave of the specified frequency (and 50%\tduty cycle) on a pin.
bg.tone_time.description=Generates a square wave of the specified frequency (and 50% duty cycle) on a pin.
bg.no_tone.description=Stops the generation of a square wave triggered by tone().
bg.serial_print.description=Send message via Serial port
bg.message.description=Text message
bg.glue_sn.description=\u3059\u3046\u3061\u3092\u3082\u3058\u308c\u3064\u306b
bg.glue_sb.description=\u3057\u3093\u304e\u3061\u3092\u3082\u3058\u308c\u3064\u306b
bg.glue_poly.description=\u3082\u3058\u3092\u3082\u3058\u308c\u3064\u306b
bg.wire_write.description=Write data via I2C
bg.wire_read.description=Read data from i2c
bg.wire_isread.description=Is last read from I2C success?
bg.eeprom_read.description=EEPROM Read
bg.eeprom_write.description=EEPROM Write
bg.sd_write2.description=Write to SD card
bg.code_loop.description=Add raw codes to loop()
bg.code_head.description=Add raw codes to head
bg.code_setup.description=Add raw codes to setup()
bg.glue_msg.description=Glue a text message
bg.variable_fake.description=Digital Var
bg.serial_println.description=Send message via Serial port with a return
bg.Tinker_LED.description=TinkerKit LED
bg.Tinker_LED_pwm.description=TinkerKit LED
bg.Tinker_Mosfet.description=TinkerKit Mosfet
bg.Tinker_Mosfet_pwm.description=TinkerKit Mosfet
bg.Tinker_Relay.description=TinkerKit Relay
bg.Tinker_Servo.description=TinkerKit Servo
bg.Tinker_Button.description=TinkerKit Button
bg.Tinker_Accmeter.description=TinkerKit Accelerometer
bg.Tinker_Hall.description=TinkerKit Hall Sensor
bg.Tinker_LDR.description=TinkerKit LDR
bg.Tinker_LinearPotentiometer.description=TinkerKit Accelerometer
bg.Tinker_RotaryPotentiometer.description=TinkerKit RotaryPotentiometer
bg.Tinker_Thermistor.description=TinkerKit Thermistor
bg.Tinker_Touch.description=TinkerKit Touch Sensor
bg.Tinker_Tilt.description=TinkerKit Tilt
bg.xcj_motor_forward.description=forward
bg.xcj_motor_backward.description=Moving the car backward
bg.xcj_ms_digital_write.description=Write digital signal to Socket
bg.xcj_ms_digital_read.description=Read digital status from socket
bg.df_pizeo_disk_vibration_sensor.description=Vibration Sensor buffers a piezoelectric transducer that responds to strain changes by generating a measurable output\tvoltage change which is proportional to the strength of vibration.
bg.df_analog_ambient_light_sensor.description=The ambient light sensor detects light density.
bg.df_analog_grayscale_sensor.description=Analog Grayscale Sensor detect the grayscale.
bg.df_flame_sensor.description=Read analog value from pin
bg.df_analog_mma7361_x.description=Read analog value from pin
bg.df_analog_mma7361_y.description=Read analog value from pin
bg.df_analog_mma7361_z.description=Read analog value from pin
bg.df_analog_gp2y0a21.description=Read analog value from pin
bg.df_analog_moisture.description=Read analog value from pin
bg.df_temperature_sensor.description=Read analog value from pin
bg.df_joystick_module_x.description=Read analog value from pin
bg.df_joystick_module_y.description=Read analog value from pin
bg.df_mma7260_x.description=Read analog value from pin
bg.df_mma7260_y.description=Read analog value from pin
bg.df_mma7260_z.description=Read analog value from pin
bg.df_analog_rotation_sensor_v1.description=Read analog value from pin
bg.df_analog_rotation_sensor_v2.description=Read analog value from pin
bg.df_analog_sound_sensor.description=Read analog value from pin
bg.df_analog_gas_sensor.description=Read analog value from pin
bg.df_analog_co_sensor.description=Read analog value from pin
bg.df_analog_voltage_divider.description=Read analog value from pin
bg.df_servo.description=set a pin to pwm
bg.df_360_degree_rotation_motor.description=set a pin to pwm
bg.df_led.description=LED Module
bg.df_led_pwm.description=LED Module
bg.df_piranha_led.description=Piranha LED Module
bg.df_piranha_led_pwm.description=Pianha LED Module with brightness level
bg.df_relay.description=Relay Module
bg.df_buzzer.description=Buzzer Module
bg.df_buzzer_tone.description=Generates a square wave of the specified frequency (and 50% duty cycle) on a pin.
bg.df_buzzer_tone_delay.description=Generates a square wave of the specified frequency (and 50%\tduty cycle) on a pin.
bg.seeed_joystick.description=Read analog value from analog pin
bg.seeed_joystick_button.description=Read analog value from analog pin
bg.seeed_o2_sensor=\u3055\u3093\u305d\u305b\u3093\u3055\u30fc
bg.seeed_uv_sensor=\u3057\u304c\u3044\u305b\u3093\u305b\u3093\u3055\u30fc
bg.seeed_single_gyro=\u3044\u3061\u3058\u304f\u30b8\u30e3\u30a4\u30ed
bg.seeed_mq9_sensor=\u3044\u3063\u3055\u3093\u304b\u305f\u3093\u305d\u305b\u3093\u3055\u30fc
bg.seeed_mp3_sensor=\u3042\u308b\u3053\u30fc\u308b\u305b\u3093\u3055\u30fc
bg.seeed_vib_sensor=\u3057\u3093\u3069\u3046\u305b\u3093\u3055\u30fc
bg.seeed_loud_sensor=\u30e9\u30a6\u30c9\u30cd\u30b9\u30bb\u30f3\u30b5\u30fc
bg.seeed_diff_amp=\u3055\u3069\u3046\u30a2\u30f3\u30d7
bg.seeed_ir_temp_sensor=\u305b\u304d\u304c\u3044\u305b\u3093\u304a\u3093\u3069\u30bb\u30f3\u30b5\u30fc
bg.seeed_ir_proximity_sensor=\u305b\u304d\u304c\u3044\u305b\u3093\u304d\u3087\u308a\u305b\u3093\u3055\u30fc
bg.seeed_electricity_sensor=\u3067\u3093\u308a\u3085\u3046\u305b\u3093\u3055\u30fc
bg.seeed_angle_sensor=\u304b\u304f\u3069\u305b\u3093\u3055\u30fc
bg.seeed_sound_sensor=\u304a\u3068\u305b\u3093\u3055\u30fc
bg.seeed_moisture_sensor=\u3057\u3064\u3069\u305b\u3093\u3055\u30fc
bg.seeed_temp_sensor=\u304a\u3093\u3069\u305b\u3093\u3055\u30fc

bg.seeed_voltage_divider=Voltage Divider
bg.seeed_flame_sensor=Flame Sensor
bg.seeed_button=Button
bg.seeed_switch=Switch
bg.seeed_ir_refl_sensor=Infrared Reflective Sensor
bg.seeed_heart_rate_sensor=Ear-clip Heart Rate Sensor
bg.seeed_chest_heart_sensor=Chest Strap Heart Rate Sensor
bg.seeed_air_quality_sensor=Air Quality Sensor
bg.seeed_line_finder=Line Finder
bg.seeed_pir_motion_sensor=PIR Motion Sensor
bg.seeed_tilt_switch=Tilt Switch
bg.seeed_push_button=Button
bg.seeed_water_sensor=Water Sensor
bg.seeed_touch_sensor=Touch Sensor
bg.seeed_mag_switch=Magnetic Switch
bg.seeed_ir_dist_int=IR Distance Interrupter

bg.seeed_circle_led=Circular LED
bg.seeed_2coil_relay=2-Coil Latching Relay
bg.seeed_dry_relay=Dry-Reed Relay
bg.seeed_solid_relay=Solid State Relay
bg.seeed_led_strip=LED Strip Driver
bg.seeed_led=LED
bg.seeed_var_led=Variable Color LED
bg.seeed_vib=Vibration Motor
bg.seeed_relay=Relay

bg.seeed_o2_sensor.description=Grove-Gas Sensor (O\u2082) is a kind of sensor to test the oxygen concentration in air, which is based on the principle of the electrochemical cell to the original work.
bg.seeed_uv_sensor.description=\u2013 UV Sensor is used for detecting the intensity of incident ultraviolet(UV) radiation.
bg.seeed_single_gyro.description=Signal Axis Analog Gyro is based on an angular velocity sensor that uses the phenomenon of Coriolis force.
bg.seeed_mq9_sensor.description=Gas Sensor module is useful for gas leakage detecting(in home and industry). It can detect LPG, i-butane, methane, alcohol, Hydrogen, somke and so on.
bg.seeed_mp3_sensor.description=Gas Sensor module is useful for gas leakage detecting(in home and industry). It can detect LPG, i-butane, methane, alcohol, Hydrogen, somke and so on.
bg.seeed_vib_sensor.description=Piezo Vibration Sensor is suitable for measurements of flexibility, vibration, impact and touch.
bg.seeed_loud_sensor.description=Loudness Sensor is designed to detect the loudness of environmental sound. Based on amplifier LM2904 and a built-in microphone, it amplifies and filters the high frequency signal that received from the microphone, and outputs a positive envelop.
bg.seeed_diff_amp.description=It's designed for precise differential-input amplification
bg.seeed_ir_temp_sensor.description=The Infrared temperature sensor is a non-contact temperature measure model.
bg.seeed_ir_proximity_sensor.description=The 80cm Infrared Proximity Sensor is a General Purpose Type Distance Measuring Sensors, this sensor takes a continuous distance reading and returns a corresponding analog voltage with a range of 10cm (4") to 80cm (30").
bg.seeed_electricity_sensor.description=The Electricity sensor module is based on the TA12-200 current transformer which can change large alternating current into a small amplitude.
bg.seeed_angle_sensor.description=The potentiometer twig produces analog output between 0 and Vcc (5V DC with Seeeduino) on its D1 connector.
bg.seeed_sound_sensor.description=The Sound sensor module is a simple microphone.
bg.seeed_moisture_sensor.description=This Moisture Sensor can be used to detect the moisture of soil or judge if there is water around the sensor, let the plants in your garden reach out for human help.
bg.seeed_temp_sensor.description=The temperature sensor uses a thermistor which returns the ambient temperature in the form of a resistance value, which is then used to alter Vcc (5V with our Seeeduinos).

bg.seeed_voltage_divider.description=Voltage Divider provides an interface for measuring external voltage, eliminating the need to connect a resistance to input interface.
bg.seeed_flame_sensor.description=Flame Sensor can be used to detect fire source or other light sources of the wavelength in the range of 760nm - 1100 nm.
bg.seeed_button.description=Button
bg.seeed_switch.description=Switch
bg.seeed_ir_refl_sensor.description=Infrared Reflective Sensor utilizes a RPR220 reflective photosensor module to detect color and distance.
bg.seeed_heart_rate_sensor.description=The heart rate measure kit can be used to monitor heart rate of patient and athlete.
bg.seeed_chest_heart_sensor.description=The heart rate measure kit can be used to monitor the heart rate of patients and athletes, meanwhile the result can be displayed on a screen via serial port and saved for analysis.
bg.seeed_air_quality_sensor.description=The sensor is designed for indoor air quality testing. The main gas detected is carbon monoxide, alcohol, acetone, thinner, formaldehyde and other slightly toxic gases.
bg.seeed_line_finder.description=Line finder is designed for line following robotic. It consists two parts - an IR emitting LED and an IR sensitive phototransistor. It can output digital signal to a microcontroller so the robot can reliably follow a black line on a white background, or vice versa.
bg.seeed_pir_motion_sensor.description=when anyone moves in its detecting range, the sensor outputs HIGH on its SIG pin.
bg.seeed_tilt_switch.description=The tilt-switch twig is the equivalent of a button, and is used as a digital input.
bg.seeed_push_button.description=Button
bg.seeed_water_sensor.description=This sensor works by having a series of exposed traces connected to ground and interlaced between the grounded traces are the sens traces. The sensor traces have a weak pull-up resistor of 1 M\u03a9. The resistor will pull the sensor trace value high until a drop of water shorts the sensor trace to the grounded trace.
bg.seeed_touch_sensor.description=It can detect the change in capacitance when a finger is near it.
bg.seeed_mag_switch.description=The magnetic switch is a wonder tool for designers who would like to turn a circuit on and off based on proximity.
bg.seeed_ir_dist_int.description=This IR Distance Interrupter features a high-sensitivity RFR-359F photoreflector to perform distance detection function.

bg.seeed_circle_led.description=it has a florid body with 24 controllable LEDs.
bg.seeed_2coil_relay.description=This module is based on 2-Coil Latching Relay.
bg.seeed_dry_relay.description=Grove-Dry-Reed Relay is a relay module which works through magnetizing the vibration reed via the current in the coils.
bg.seeed_solid_relay.description=Solid State Relay is a non-contact electronic switch module that has relay features.
bg.seeed_led_strip.description=It can help you control the luminance of a single-color LED strip, as well as the color and the luminance of an RGB LED strip through Arduino or Seeeduino.
bg.seeed_led.description=LED is designed for the beginners of Arduino/Seeeduino to monitor controls from digital ports.
bg.seeed_var_led.description=When SIG pin is logic LOW, the RGB LED will show.
bg.seeed_vib.description=It is consist one coin type motor which is a Permanent Magnet coreless DC motor.
bg.seeed_relay.description=The Relay is a digital normally open switch that controls a relay capable of switching much higher voltages and currents than your normal Arduino boards.

bg.ls_10mmLEDModule.description=10mm Blue/Green/Yellow/Red LED Module
bg.ls_5mmLEDModule.description=5mm Blue/Green/Yellow/Red LED Module
bg.ls_AccelerometerModule_x.description=Based on the excellent ADXL-345, this digital 3-axis accelerometer has excellent EMI protection.
bg.ls_AccelerometerModule_y.description=Based on the excellent ADXL-345, this digital 3-axis accelerometer has excellent EMI protection.
bg.ls_AccelerometerModule_z.description=Based on the excellent ADXL-345, this digital 3-axis accelerometer has excellent EMI protection.
bg.ls_ButtonModule.description=Button Module
bg.ls_BuzzerModule.description=Buzzer Module
bg.ls_HallSensor.description=Hall Sensor
bg.ls_HighPowerLedModule.description=High Power Led Module
bg.ls_JoystickSensorModule_x.description=Joystick Sensor Module
bg.ls_JoystickSensorModule_y.description=Joystick Sensor Module
bg.ls_LDRModule.description=LDR Module
bg.ls_LEDBar.description=LED Bar
bg.ls_Linear-SlidePotentiometerModule.description=Linear/Slide Potentiometer Module
bg.ls_MagneticSwitch.description=Magnetic Switch
bg.ls_MosfetModule.description=Mosfet Module
bg.ls_RelayModule.description=Relay Module
bg.ls_RotaryPotentiometerModule.description=Rotary Potentiometer Module
bg.ls_RTCModule.description=RTC Module
bg.ls_SoundSensor.description=Sound Sensor
bg.ls_ThermalModule.description=Thermal Module
bg.ls_TiltModule.description=Tilt Module
bg.ls_TouchSensorModule.description=Touch Sensor Module

bg.panda_i1=panda I1
bg.panda_i2=panda I2
bg.panda_i3=panda I3
bg.panda_i4=panda I4
bg.panda_i5=panda I5
bg.panda_i6=panda I6

bg.panda_o1=panda O1
bg.panda_o2=panda O2
bg.panda_o3=panda O3
bg.panda_o4=panda O4
bg.panda_o5=panda O5
bg.panda_o6=panda O6

bd.network=\u30cd\u30c3\u30c8\u30ef\u30fc\u30af
bg.bleshield=BLE \u30b7\u30fc\u30eb\u30c9
bg.bleshield.description=Bluetooth \u3064\u3046\u3057\u3093\u306e BLE \u30b7\u30fc\u30eb\u30c9
bg.bleshield_available=BLE \u30b7\u30fc\u30eb\u30c9\u306e\u3058\u3085\u3093\u3073OK\uff1f
bg.bleshield_read_poly=BLE \u30b7\u30fc\u30eb\u30c9\u304b\u3089\u3088\u307f\u3053\u307f

